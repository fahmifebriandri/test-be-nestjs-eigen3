import { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';
import { Book } from '@prisma/client';
import { BookRepository } from '../book-repository/book-repository';

@Controller('/api/books')
export class BookController {
    constructor(private readonly bookRepository: BookRepository) {}

    // Create a new book
    @Post()
    async create(
        @Body('code') code: string,
        @Body('title') title: string,
        @Body('author') author: string,
        @Body('stock') stock: number,
    ): Promise<Book> {
        return this.bookRepository.create(code, title, author, stock);
    }

    // Get all books
    @Get()
    async findAll(): Promise<Book[]> {
        return this.bookRepository.findAll();
    }

    // Get book by ID
    @Get(':id')
    async findById(@Param('id') id: number): Promise<Book | null> {
        return this.bookRepository.findById(Number(id));
    }

    // Update a book by ID
    @Put(':id')
    async update(
        @Param('id') id: number,
        @Body('code') code: string,
        @Body('title') title: string,
        @Body('author') author: string,
        @Body('stock') stock: number,
    ): Promise<Book> {
        return this.bookRepository.update(Number(id), code, title, author, stock);
    }

    // Delete a book by ID
    @Delete(':id')
    async delete(@Param('id') id: number): Promise<Book> {
        return this.bookRepository.delete(Number(id));
    }
}
